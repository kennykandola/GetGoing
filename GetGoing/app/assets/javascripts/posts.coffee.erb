$(".posts.new").ready ->
  googlePlaceAutocomplete()
  cocoonCallbacks()

$(".posts.edit").ready ->
  googlePlaceAutocomplete()
  cocoonCallbacks()
  $('.input-daterange').datepicker({})

cocoonCallbacks = ->
  $('#places').on('cocoon:before-insert', (e, task_to_be_added) ->
    task_to_be_added.fadeIn 'slow'
    return
  ).on('cocoon:after-insert', (e, added_task) ->
    $('#place-input').val('')
    return
  ).on 'cocoon:before-remove', (e, task) ->
    $(this).data 'remove-timeout', 1000
    task.fadeOut 'slow'
    return

@googlePlaceAutocomplete = (autocomplete_type, input_id, parent_id) ->
  input_id ?= 'place-input'
  autocomplete_type ?= '(cities)'
  parent_id ?= ''
  input = document.getElementById(input_id)
  placeSearch = undefined
  autocomplete = undefined

  initAutocomplete = ->

    # Create the autocomplete object, restricting the search to geographical
    # location types.
    autocomplete = new (google.maps.places.Autocomplete)(input, types: [ autocomplete_type ])
    # Disable form submit on enter (prevent unexpected sumbit on place autocomplete)
    google.maps.event.addDomListener input, 'keydown', (event) ->
      if event.keyCode == 13
        event.preventDefault()
      return
    # When the user selects an address from the dropdown, populate the address
    # fields in the form.
    autocomplete.addListener 'place_changed', fillInAddress
    return

  fillInAddress = ->
    # Get the place details from the autocomplete object.
    place = autocomplete.getPlace()
    country = place.address_components.find(isCountry)
    state = place.address_components.find(isState)
    city = place.address_components.find(isCity)
    $("#{parent_id} .nested-fields:last #place-google_id").val(place?.place_id);
    $("#{parent_id} .nested-fields:last #place-country").val(country?.long_name);
    $("#{parent_id} .nested-fields:last #place-state").val(state?.short_name);
    $("#{parent_id} .nested-fields:last #place-city").val(city?.long_name);
    $("#{parent_id} .nested-fields:last #place-latitude").val(place?.geometry.location.lat())
    $("#{parent_id} .nested-fields:last #place-longitude").val(place?.geometry.location.lng())

  isCity = (address_component) ->
    address_component.types[0] == 'locality' || \
      address_component.types[0] == 'postal_town' || \
      address_component.types[0] == 'administrative_area_level_3' || \
      address_component.types[0] == 'sublocality_level_1' || \
      address_component.types[0] == 'administrative_area_level_2'

  isState = (address_component) ->
    address_component.types[0] == 'administrative_area_level_1'

  isCountry = (address_component) ->
    address_component.types[0] == 'country'

  $(".add_fields").click ->
    $('#place-input').val('')

  initAutocomplete()


$(".posts.show").ready ->
  facebookSDKInitialize()

facebookSDKInitialize = ->
  window.fbAsyncInit = ->
    FB.init
      appId: '<%= ENV["FACEBOOK_APP_ID"] %>'
      autoLogAppEvents: true
      xfbml: true
      version: 'v2.10'
    FB.AppEvents.logPageView()
    return

  ((d, s, id) ->
    js = undefined
    fjs = d.getElementsByTagName(s)[0]
    if d.getElementById(id)
      return
    js = d.createElement(s)
    js.id = id
    js.src = '//connect.facebook.net/en_US/sdk.js'
    fjs.parentNode.insertBefore js, fjs
    return
  ) document, 'script', 'facebook-jssdk'

$(".posts.all_posts").ready ->
  $ ->
    if $('.pagination').length && $('#infinite-container').length
      $(window).scroll ->
        url = $('.pagination .next_page').attr('href')
        if url && $(window).scrollTop() > $(document).height() - $(window).height() - 100
          $('.pagination').text("Loading more posts...")
          $.getScript(url)
      $(window).scroll()

$(".posts.index").ready ->
  $('#post_main_destinataion_country').hide()
  googlePlaceAutocomplete('(cities)', 'post_main_destinataion_city')
  googlePlaceAutocomplete('(regions)', 'post_main_destinataion_country')

  $('#country-toggle').click ->
    clearInputs()
    $(this).addClass('selected').siblings().removeClass('selected')
    $('#post_main_destinataion_city').hide()
    $('#post_main_destinataion_country').css('display', 'block')

  $('#city-toggle').click ->
    clearInputs()
    $(this).addClass('selected').siblings().removeClass('selected')
    $('#post_main_destinataion_country').hide()
    $('#post_main_destinataion_city').css('display', 'block')

clearInputs = ->
  $('#place-google_id').val('');
  $('#place-country').val('');
  $('#place-state').val('');
  $('#place-city').val('');
  $('#place-latitude').val('')
  $('#place-longitude').val('')
  $('#post_main_destinataion_country').val('')
  $('#post_main_destinataion_city').val('')
