$("#modal-component").html("<%= escape_javascript(render( partial: 'posts/new_invitation', locals: { :post => @post })).html_safe %>");
$("#modal-component").modal("show");

$("#shareBtn").click(function(){
  FB.ui({
    method: 'send',
    link: 'https://developers.facebook.com/docs/',
  });
});

<%# Server-side user autocomplete search disabled in order to eliminate network requests
(For now itâ€™s much faster and efficient to load all records into JavaScript and autocomplete there instead of making request to server with each input keypress)
var users = new Bloodhound({
  datumTokenizer: Bloodhound.tokenizers.whitespace,
  queryTokenizer: Bloodhound.tokenizers.whitespace,
  remote: {
    url: '/users/autocomplete?query=%QUERY',
    wildcard: '%QUERY'
  }
});
$('#users_search').typeahead(null, {
  source: users,
  hint: false,
  displayKey: 'email',
  templates: {
    suggestion: function(data){
      return '<p><strong>' + data.email + '</strong> - ' + data.first_name + data.last_name + '</p>';
    }
  }
});%>

var REGEX_EMAIL = '([a-z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@' +
                  '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)';

$('#select-to').selectize({
    persist: false,
    maxItems: null,
    valueField: 'email',
    labelField: 'name',
    searchField: ['name', 'email'],
    options: $('#select-to').parents("form").data("users"),
    render: {
        item: function(item, escape) {
            return '<div class="autoselect-item">' +
                (item.name ? '<span class="autoselect-name">' + escape(item.name) + '</span>' : '') +
                (item.email ? '<span class="autoselect-email">' + " &lt;" + escape(item.email) + "&gt;"+ '</span>' : '') +
            '</div>';
        },
        option: function(item, escape) {
            var label = item.name || item.email;
            var caption = item.name ? item.email : null;
            return '<div>' +
                '<span class="autoselect-label">' + escape(label) + '</span>' +
                (caption ? '<span class="autoselect-caption">' + " " + escape(caption) + '</span>' : '') +
            '</div>';
        }
    },
    createFilter: function(input) {
        var match, regex;

        // email@address.com
        regex = new RegExp('^' + REGEX_EMAIL + '$', 'i');
        match = input.match(regex);
        if (match) return !this.options.hasOwnProperty(match[0]);

        // name <email@address.com>
        regex = new RegExp('^([^<]*)\<' + REGEX_EMAIL + '\>$', 'i');
        match = input.match(regex);
        if (match) return !this.options.hasOwnProperty(match[2]);

        return false;
    },
    create: function(input) {
        if ((new RegExp('^' + REGEX_EMAIL + '$', 'i')).test(input)) {
            return {email: input};
        }
        var match = input.match(new RegExp('^([^<]*)\<' + REGEX_EMAIL + '\>$', 'i'));
        if (match) {
            return {
                email : match[2],
                name  : $.trim(match[1])
            };
        }
        alert('Invalid email address.');
        return false;
    }
});
